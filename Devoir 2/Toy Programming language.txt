<!DOCTYPE html>
<html>

<body>

    <p id="text">v1 = 5346 (G_G)
        <br> v2 = 10 (G_G)
        <br> var = v2 + 10 (G_G)
        <br> var2 = v1 + 100000(G_G)
        <br> ceva = 555 + v1(G_G)
        <br> ceva2 = v1 + v2(G_G)
		<br> ceva3 = 45+ 20 (G_G)
    </p>


    <button onclick="GoodGame()">Parse</button>

    <p id="demo"></p>

    <script>
        function GoodGame() {

            text = document.getElementById("text").innerHTML.split('<br>');

            //Regex and syntax
            //================
            var declarationRegex = /([a-zA-Z_]+|[a-zA-Z_]+\w+)\s*\=\s*(\d+)\s*\(\G\_\G\)/;
            var declarationSyntax;

            var additionRegex = /([a-zA-Z_]+|[a-zA-Z_]+\w+)\s*\=\s*([a-zA-Z_]+|[a-zA-Z_]+\w+)\s*\+\s*(\d+)\s*\(\G\_\G\)/;
            var additionSyntax;

            var inversedAdditionRegex = /([a-zA-Z_]+|[a-zA-Z_]+\w+)\s*\=\s*(\d+)\s*\+\s*([a-zA-Z_]+|[a-zA-Z_]+\w+)\s*\(\G\_\G\)/;
            var inversedAdditionSyntax;
			
			var multipleAdditionRegex = /([a-zA-Z_]+|[a-zA-Z_]+\w+)\s*\=\s*([a-zA-Z_]+|[a-zA-Z_]+\w+)\s*\+\s*([a-zA-Z_]+|[a-zA-Z_]+\w+)\s*\(\G\_\G\)/;
            var multipleAdditionSyntax;
			
			var integerAdditionRegex = /([a-zA-Z_]+|[a-zA-Z_]+\w+)\s*\=\s*(\d+)\s*\+\s*(\d+)\s*\(\G\_\G\)/;
			var integerAdditionSyntax;
            //================



            //Variables and values extraction
            //================
            var variableDeclarations = [];
            var variableValues = [];

            var additionPreDeclarations = [];
            var additionPostDeclarations = [];
            var additionVariables = [];

            var inversedAdditionPreDeclarations = [];
            var inversedAdditionPostDeclarations = [];
            var inversedAdditionVariables = [];
			
			var multipleAdditionPreDeclarations = [];
            var multipleAdditionFirstVariable = [];
            var multipleAdditionSecondVariable = [];
			
			var integerAdditionPreDeclarations = [];
            var integerAdditionFirstVariable = [];
            var integerAdditionSecondVariable = [];

            for (i = 0; i < text.length; i++) {

                if (declarationRegex.test(text[i])) {
                    declarationSyntax = declarationRegex.exec(text[i]);

                    variableDeclarations.push(declarationSyntax[1]);
                    variableValues.push(declarationSyntax[2]);

                } else if (additionRegex.test(text[i])) {
                    additionSyntax = additionRegex.exec(text[i]);

                    additionPreDeclarations.push(additionSyntax[1]);
                    additionPostDeclarations.push(additionSyntax[2]);
                    additionVariables.push(additionSyntax[3]);
                } else if (inversedAdditionRegex.test(text[i])) {
                    inversedAdditionSyntax = inversedAdditionRegex.exec(text[i]);
                    inversedAdditionPreDeclarations.push(inversedAdditionSyntax[1]);
                    inversedAdditionVariables.push(inversedAdditionSyntax[2]);
                    inversedAdditionPostDeclarations.push(inversedAdditionSyntax[3]);

                }
				  else if(multipleAdditionRegex.test(text[i])){
					multipleAdditionSyntax = multipleAdditionRegex.exec(text[i]);
					
					multipleAdditionPreDeclarations.push(multipleAdditionSyntax[1]);
					multipleAdditionFirstVariable.push(multipleAdditionSyntax[2]);
					multipleAdditionSecondVariable.push(multipleAdditionSyntax[3]);
					
				  }
				  else if(integerAdditionRegex.test(text[i])){
					integerAdditionSyntax = integerAdditionRegex.exec(text[i]);
					
					integerAdditionPreDeclarations.push(integerAdditionSyntax[1]);
					integerAdditionFirstVariable.push(integerAdditionSyntax[2]);
					integerAdditionSecondVariable.push(integerAdditionSyntax[3]);
				  }
				else {
                    document.writeln("<span style=\"color:red;\">> Syntax error on line " + (i + 1) + "<\/span>");
                    document.writeln('<br>');

                }

            }
            //================


            //Where magic happens
            //================
            var variableIsDeclared = false;
			var variableOneIsDeclared = false;
			var variableTwoIsDeclared = false;
			
            
			//var = var + int;
            for (i = 0; i < additionPreDeclarations.length; i++) {
                for (j = 0; j < variableDeclarations.length; j++) {
                    if (variableDeclarations[j] == additionPostDeclarations[i]) {
                        declaredVariableValue = variableValues[j];
                        variableIsDeclared = true;
                        break;
                    } else {
                        variableIsDeclared = false;
                    }
                }
                if (variableIsDeclared) {
                    addition = parseInt(declaredVariableValue) + parseInt(additionVariables[i]);
                    document.writeln(additionPreDeclarations[i] + "=" + addition);
                    document.writeln('<br>');
                } else {
                    document.writeln("<span style=\"color:red;\"> > ERROR ! Cannot print '" + additionPreDeclarations[i] + "'. Variable '" + additionPostDeclarations[i] + "' is not declared <\/span>");
                    document.writeln('<br>');
                }
            }

			
			//var = int + var;
            for (i = 0; i < inversedAdditionPreDeclarations.length; i++) {
                for (j = 0; j < variableDeclarations.length; j++) {
                    if (variableDeclarations[j] == inversedAdditionPostDeclarations[i]) {
                        declaredVariableValue = variableValues[j];
                        variableIsDeclared = true;
                        break;
                    } else {
                        variableIsDeclared = false;
                    }
                }
                if (variableIsDeclared) {
                    addition = parseInt(declaredVariableValue) + parseInt(inversedAdditionVariables[i]);
                    document.writeln(inversedAdditionPreDeclarations[i] + "=" + addition);
                    document.writeln('<br>');
                } else {
                    document.writeln("<span style=\"color:red;\"> > ERROR ! Cannot print '" + inversedAdditionPreDeclarations[i] + "'. Variable '" + inversedAdditionPostDeclarations[i] + "' is not declared <\/span>");
                    document.writeln('<br>');
                }
            }
			
			
			//var = var + var;
			for (i = 0; i < multipleAdditionPreDeclarations.length; i++) {
                for (j = 0; j < variableDeclarations.length; j++) {
                    if (multipleAdditionFirstVariable[i] == variableDeclarations[j]) {
                        declaredVariableOneValue = variableValues[j];
                        variableOneIsDeclared = true;
                        break;
                    } else {
                        variableOneIsDeclared = false;
                    }
                }
				
				for (k = 0; k < variableDeclarations.length; k++) {
                    if (multipleAdditionSecondVariable[i] == variableDeclarations[k]) {
                        declaredVariableTwoValue = variableValues[k];
                        variableTwoIsDeclared = true;
                        break;
                    } else {
                        variableTwoIsDeclared = false;
                    }
                }
				
                if (variableOneIsDeclared == false) {
				
					document.writeln("<span style=\"color:red;\"> > ERROR ! Cannot print '" + multipleAdditionPreDeclarations[i] + "'. Variable '" + multipleAdditionFirstVariable[i] + "' is not declared <\/span>");
                    document.writeln('<br>');
					
                    
                }
				if(variableTwoIsDeclared == false){
				
					document.writeln("<span style=\"color:red;\"> > ERROR ! Cannot print '" + multipleAdditionPreDeclarations[i] + "'. Variable '" + multipleAdditionSecondVariable[i] + "' is not declared <\/span>");
                    document.writeln('<br>');
					
                }
				if(variableOneIsDeclared == true && variableTwoIsDeclared == true){
					addition = parseInt(declaredVariableOneValue) + parseInt(declaredVariableTwoValue);
                    document.writeln(multipleAdditionPreDeclarations[i] + "=" + addition);
                    document.writeln('<br>');
				}
				
            }
			
			
			//var = int + int;
			for (i = 0; i < integerAdditionPreDeclarations.length; i++) {
                
					addition = parseInt(integerAdditionFirstVariable[i]) + parseInt(integerAdditionSecondVariable[i]);
                    document.writeln(integerAdditionPreDeclarations[i] + "=" + addition);
                    document.writeln('<br>');
				
				
            }
		

            
            //================

        }
    </script>

</body>

</html>